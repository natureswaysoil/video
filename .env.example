# Source of products (Google Sheet CSV export URL)
CSV_URL="https://docs.google.com/spreadsheets/d/1LU2ahpzMqLB5FLYqiyDbXOfjTxbdp8U8/export?format=csv&gid=1712974299"

# Optional CSV column overrides (comma-separated header names in priority order)
# Defaults are tuned for your sheet headers below; uncomment to change.
# CSV_COL_JOB_ID="ASIN,SKU"            # set to the column that contains your WaveSpeed jobId if you store it; update as needed
# CSV_COL_TITLE="Title,Short_Name"
# CSV_COL_DETAILS="Short_Name,Title"
# CSV_COL_NAME="Title"
# CSV_COL_ID="Product_ID,ASIN,SKU"
# If your CSV includes a direct video URL column, list it here (first matching header wins)
# CSV_COL_VIDEO_URL="video_url,Video URL,VideoURL"
# CSV_COL_READY="Ready,Enabled,Status"
# CSV_COL_POSTED="Posted"
# Treat any of these values as truthy for posting (comma-separated; defaults shown):
# CSV_STATUS_TRUE_VALUES="1,true,yes,y,on,post,enabled"

# Marking posted back to Google Sheets (optional)
GS_SERVICE_ACCOUNT_EMAIL=""
GS_SERVICE_ACCOUNT_KEY="" # use \n for newlines in the private key
# Optional column names to write
# CSV_COL_POSTED="Posted"
# CSV_COL_POSTED_AT="Posted_At"

# Polling (ms) for continuous processing
POLL_INTERVAL_MS=60000
# Force a single cycle (serverless/Jobs)
RUN_ONCE=false

# Video URL resolution
# Template used when building the video URL from jobId (supports {jobId} or {asin})
WAVE_VIDEO_URL_TEMPLATE="https://wavespeed.ai/jobs/{jobId}/video.mp4"
# Set to true to skip preflight HEAD/range check for the video URL (not recommended)
SKIP_VIDEO_EXISTS_CHECK=false

# Instagram
INSTAGRAM_ACCESS_TOKEN=""
INSTAGRAM_IG_ID=""

## SECURITY: Do NOT place real secrets in this file. Use empty strings/placeholders only.
# Twitter/X
TWITTER_BEARER_TOKEN="" # optional if using simple text tweet
# For native media upload (preferred)
TWITTER_API_KEY=""
TWITTER_API_SECRET=""
TWITTER_ACCESS_TOKEN=""
TWITTER_ACCESS_SECRET=""

# Pinterest
PINTEREST_ACCESS_TOKEN=""
PINTEREST_BOARD_ID=""

# YouTube (optional)
YT_CLIENT_ID=""
YT_CLIENT_SECRET=""
YT_REFRESH_TOKEN=""
# 'public' | 'unlisted' | 'private'
YT_PRIVACY_STATUS=unlisted

# Pictory (PRIMARY video generation)
# Option 1: Direct env vars
PICTORY_CLIENT_ID=""
PICTORY_CLIENT_SECRET=""
X_PICTORY_USER_ID=""
PICTORY_API_ENDPOINT="https://api.pictory.ai"

# Option 2: GCP Secret Manager (recommended for production)
# Set these to the full secret resource names, e.g.:
# projects/YOUR_PROJECT/secrets/pictory-client-id/versions/latest
GCP_SECRET_PICTORY_CLIENT_ID=""
GCP_SECRET_PICTORY_CLIENT_SECRET=""
GCP_SECRET_X_PICTORY_USER_ID=""

# WaveSpeed (FALLBACK video generation if Pictory fails)
# Either key name is supported
WAVE_SPEED_API_KEY=""
# WAVESPEED_API_KEY=""
# Optional: WaveSpeed API base and video lookup
# Base URL for API requests
# WAVE_API_BASE_URL="https://api.wavespeed.ai"
# Endpoint path used to look up a video's URL by jobId (supports {jobId}/{asin})
# WAVE_VIDEO_LOOKUP_PATH="/api/v3/stability-ai/sdxl-lora"
# HTTP method for the lookup (default POST)
# WAVE_VIDEO_LOOKUP_METHOD=POST
# JSON body template (supports {jobId})
# WAVE_VIDEO_LOOKUP_BODY_TEMPLATE='{"param1":"value1","param2":"{jobId}"}'
# JSON pointer to the URL in the response (default /video_url)
# WAVE_VIDEO_LOOKUP_JSON_POINTER="/video_url"

